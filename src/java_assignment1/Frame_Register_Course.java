/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package java_assignment1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class Frame_Register_Course extends javax.swing.JFrame {

    /**
     * Creates new form Frame_Register_Course
     */
    private String namee;

    public Frame_Register_Course() {
        initComponents();
        list();
        Database database = new Database();
        getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        programmgecmb = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        yearscmb = new javax.swing.JComboBox<>();
        programmeok = new javax.swing.JButton();
        yearok = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        semestercmb = new javax.swing.JComboBox<>();
        semesterok = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        coursecmb = new javax.swing.JComboBox<>();
        yearok2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        coursetable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dattxt = new javax.swing.JTextPane();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        timetxt = new javax.swing.JTextPane();
        registerbtn = new javax.swing.JButton();
        backbtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        courseName = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        creditHour = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        rstbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_assignment1/logo.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        jLabel2.setText("REGISTER COURSE");

        jLabel1.setText("Programme: ");

        jLabel3.setText("Years");

        programmeok.setText("SELECT");
        programmeok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                programmeokActionPerformed(evt);
            }
        });

        yearok.setText("SELECT");
        yearok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearokActionPerformed(evt);
            }
        });

        jLabel4.setText("Semesters:");

        semesterok.setText("SELECT");
        semesterok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semesterokActionPerformed(evt);
            }
        });

        jLabel5.setText("Course: ");

        yearok2.setText("SELECT");
        yearok2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearok2ActionPerformed(evt);
            }
        });

        coursetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Day", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        coursetable.setColumnSelectionAllowed(true);
        coursetable.getTableHeader().setReorderingAllowed(false);
        coursetable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coursetableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(coursetable);
        coursetable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel7.setText("Day");

        dattxt.setEditable(false);
        jScrollPane2.setViewportView(dattxt);

        jLabel8.setText("Time: ");

        timetxt.setEditable(false);
        jScrollPane4.setViewportView(timetxt);

        registerbtn.setText("Register");
        registerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerbtnActionPerformed(evt);
            }
        });

        backbtn.setText("Back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        jLabel10.setText("Name: ");

        jLabel11.setText("Credit Hour: ");

        jLabel12.setText("Description:");

        courseName.setEditable(false);
        jScrollPane5.setViewportView(courseName);

        creditHour.setEditable(false);
        jScrollPane6.setViewportView(creditHour);

        description.setEditable(false);
        description.setColumns(20);
        description.setRows(5);
        jScrollPane7.setViewportView(description);

        rstbtn.setText("Reset");
        rstbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rstbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(coursecmb, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(yearscmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(programmgecmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(semestercmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(programmeok)
                                    .addComponent(semesterok)
                                    .addComponent(yearok2)
                                    .addComponent(yearok))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(44, 44, 44)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jScrollPane2)
                                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)))))
                            .addComponent(jLabel5))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(241, 241, 241))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(278, 278, 278))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(36, 36, 36)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(registerbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(backbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rstbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(programmgecmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(programmeok))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(yearscmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearok))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(semestercmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(semesterok))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(coursecmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearok2))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(102, 102, 102))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addComponent(registerbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rstbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void programmeokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_programmeokActionPerformed
        yearscmb.removeAllItems();
        yearscmb.addItem("- Please Select -");
        yearscmb.setSelectedItem("- Please Select -");
        String choice = programmgecmb.getSelectedItem().toString();

        Database database = new Database();
        database.getAllData();

        try {
            ArrayList<ProgrammeStructure> progsList = database.getProgrammeStructure();
            int size = progsList.size();
            for (int i = 0; i < size; i++) {
                if (progsList.get(i).getProgrammeCode().equals(choice)) {
                    yearscmb.addItem(progsList.get(i).getAcademicYear());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Year list Error, " + e);
        }
    }//GEN-LAST:event_programmeokActionPerformed

    private void yearokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearokActionPerformed
        semestercmb.removeAllItems();
        semestercmb.addItem("- Please Select -");
        semestercmb.setSelectedItem("- Please Select -");
        String choices = yearscmb.getSelectedItem().toString();

        Database database = new Database();
        database.getAllData();

        try {
            ArrayList<ProgrammeStructure> progsList = database.getProgrammeStructure();
            int size = progsList.size();
            for (int i = 0; i < size; i++) {
                if (progsList.get(i).getProgrammeCode().equals(programmgecmb.getSelectedItem().toString()) && progsList.get(i).getAcademicYear().equals(choices)) {
                    semestercmb.addItem(progsList.get(i).getSemesters());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Year list Error, " + e);
        }
    }//GEN-LAST:event_yearokActionPerformed

    private void semesterokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semesterokActionPerformed
        coursecmb.removeAllItems();
        coursecmb.addItem("- Please Select -");
        coursecmb.setSelectedItem("- Please Select -");
        String choice = programmgecmb.getSelectedItem().toString();

        Database database = new Database();
        database.getAllData();

        try {
            ArrayList<Course> courseList = database.getCourse();
            int size = courseList.size();
            for (int i = 0; i < size; i++) {
                if (courseList.get(i).getProgrameCode().equals(choice)) {
                    coursecmb.addItem(courseList.get(i).getCourseName());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Year list Error, " + e);
        }
    }//GEN-LAST:event_semesterokActionPerformed

    private void yearok2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearok2ActionPerformed
        
        DefaultTableModel dm = (DefaultTableModel) coursetable.getModel();
        while (dm.getRowCount() > 0) {
            dm.removeRow(0);
        }
        showTable();
        String choice = coursecmb.getSelectedItem().toString();

        Database database = new Database();
        database.getAllData();

        try {
            ArrayList<Course> courseList = database.getCourse();
            int size = courseList.size();
            for (int i = 0; i < size; i++) {
                if (courseList.get(i).getCourseName().equals(choice)) {
                    courseName.setText(courseList.get(i).getCourseName());
                    String credit = new Integer(courseList.get(i).getCreditHour()).toString();
                    creditHour.setText(credit);
                    description.setText(courseList.get(i).getCourseDescription());

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Year list Error, " + e);
        }
    }//GEN-LAST:event_yearok2ActionPerformed

    private void coursetableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coursetableMouseClicked
        DefaultTableModel model = (DefaultTableModel) coursetable.getModel();
        int selectedRowIndex = coursetable.getSelectedRow();

        dattxt.setText(model.getValueAt(selectedRowIndex, 0).toString());
        timetxt.setText(model.getValueAt(selectedRowIndex, 1).toString());
    }//GEN-LAST:event_coursetableMouseClicked

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        Frame_Student sp = new Frame_Student();
        sp.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backbtnActionPerformed

    private void registerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerbtnActionPerformed
        String programme = programmgecmb.getSelectedItem().toString();
        String year = yearscmb.getSelectedItem().toString();
        String semester = semestercmb.getSelectedItem().toString();
        String course = coursecmb.getSelectedItem().toString();
        String day = dattxt.getText();
        String time = timetxt.getText();
        String user = this.namee;
        String credit = creditHour.getText();
        int creditt = Integer.parseInt(credit);

        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(null, "Would You Like to Register this course?", "Warning", dialogButton);
        if (dialogResult == JOptionPane.YES_OPTION) {
            Registration register = new Registration();
            int count = register.registerCourse(programme, year, semester, course, day, time, user, creditt);
            switch (count) {
                case 1:
                    JOptionPane.showMessageDialog(null, "Register Success, you have receive an email, please check your payment on Bill page");
                    break;
                case 2:
                    JOptionPane.showMessageDialog(null, "Register fail, please try again");
                    break;
                default:
                    break;
            }
        }

    }//GEN-LAST:event_registerbtnActionPerformed

    private void rstbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rstbtnActionPerformed
        rst();
    }//GEN-LAST:event_rstbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame_Register_Course.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame_Register_Course.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame_Register_Course.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame_Register_Course.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame_Register_Course().setVisible(true);
            }
        });
    }

    public void list() {
        programmgecmb.addItem("- Please Select -");
        programmgecmb.setSelectedItem("- Please Select -");

        Database database = new Database();
        database.getAllData();

        try {
            ArrayList<Programme> progList = database.getProgramme();
            int size = progList.size();
            for (int i = 0; i < progList.size(); i++) {
                programmgecmb.addItem(progList.get(i).getProgrammeCode());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Programme list Error, " + e);
        }
    }

    public ArrayList<courseSchedule> schedule() {
        ArrayList<courseSchedule> courseList = new ArrayList<courseSchedule>();

        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            Connection CourseConn = DriverManager.getConnection("jdbc:derby://localhost:1527/ELearningDatabase", "localhost", "123456");
            String courseSql = "SELECT * FROM COURSESCHEDULE";
            PreparedStatement courseStmt = CourseConn.prepareStatement(courseSql);
            ResultSet courseResult = courseStmt.executeQuery();
            while (courseResult.next()) {
                courseSchedule course = new courseSchedule(courseResult.getString("DAY"), courseResult.getString("TIME"));
                courseList.add(course);
            }
            CourseConn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Course Schedule Database Error, " + e);
        }
        return courseList;
    }

    public void showTable() {
        ArrayList<courseSchedule> courseS = schedule();
        DefaultTableModel model = (DefaultTableModel) coursetable.getModel();
        Object[] row = new Object[2];
        for (int i = 0; i < courseS.size(); i++) {
            row[0] = courseS.get(i).getDay();
            row[1] = courseS.get(i).getTime();
            model.addRow(row);
        }

    }

    public String getData() {
        Database database = new Database();
        database.getAllData();

        try {
            ArrayList<User> userList = database.getUser();

            for (int i = 0; i < userList.size(); i++) {
                String user = userList.get(i).getUsername();
                ArrayList<Student> studList = database.getStudent();
                int sizee = studList.size();
                for (int z = 0; z < sizee; z++) {
                    if (studList.get(z).getStudentUsername().compareTo(user) == 0) {
                        this.namee = studList.get(z).getStudentUsername();
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Profile Error, " + e);
        }

        return this.namee;
    }

    public void rst() {
        programmgecmb.setSelectedItem("- Please Select -");
        yearscmb.removeAllItems();
        semestercmb.removeAllItems();
        coursecmb.removeAllItems();
        courseName.setText(null);
        description.setText(null);
        creditHour.setText(null);
        dattxt.setText(null);
        timetxt.setText(null);

        DefaultTableModel dm = (DefaultTableModel) coursetable.getModel();
        while (dm.getRowCount() > 0) {
            dm.removeRow(0);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbtn;
    private javax.swing.JTextPane courseName;
    private javax.swing.JComboBox<String> coursecmb;
    private javax.swing.JTable coursetable;
    private javax.swing.JTextPane creditHour;
    private javax.swing.JTextPane dattxt;
    private javax.swing.JTextArea description;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JButton programmeok;
    private javax.swing.JComboBox<String> programmgecmb;
    private javax.swing.JButton registerbtn;
    private javax.swing.JButton rstbtn;
    private javax.swing.JComboBox<String> semestercmb;
    private javax.swing.JButton semesterok;
    private javax.swing.JTextPane timetxt;
    private javax.swing.JButton yearok;
    private javax.swing.JButton yearok2;
    private javax.swing.JComboBox<String> yearscmb;
    // End of variables declaration//GEN-END:variables
}
