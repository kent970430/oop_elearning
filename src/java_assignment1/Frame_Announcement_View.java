/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package java_assignment1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Date;
import static java_assignment1.Database.announcement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class Frame_Announcement_View extends javax.swing.JFrame {

    /**
     * Creates new form Frame_View_Announcement
     */
    public Frame_Announcement_View() {
        initComponents();
        list();
        showTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        announcement = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        combobox = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java_assignment1/logo.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        jLabel2.setText("ANNOUNCEMENT");

        announcement.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Title", "Description", "Status", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        announcement.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(announcement);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("ANNOUNCEMENT FOR:");

        jButton2.setText("GO");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                            .addComponent(combobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 117, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(288, 288, 288)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton2))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Frame_Announcement fas = new Frame_Announcement();
        fas.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String cmbo = combobox.getSelectedItem().toString();
        Database database = new Database();
        ArrayList<Announcement> announceList = database.getAnnouncement();
        DefaultTableModel model = (DefaultTableModel) announcement.getModel();
        int sizee = announceList.size();
        switch (cmbo) {
            case "All":
                while (model.getRowCount() > 0) {
                    model.removeRow(0);
                }
                for (int z = 0; z < sizee; z++) {
                    Object[] row = new Object[6];
                    row[0] = announceList.get(z).getAnnouncementID();
                    row[1] = announceList.get(z).getAnnouncementTitle();
                    row[2] = announceList.get(z).getAnnouncementDescription();
                    row[3] = announceList.get(z).getAnnouncementStatus();
                    row[4] = announceList.get(z).getAnnouncementDate();
                    row[5] = announceList.get(z).getId();
                    model.addRow(row);
                }
                break;
            case "Admin":
                while (model.getRowCount() > 0) {
                    model.removeRow(0);
                }
                for (int z = 0; z < sizee; z++) {
                    if (announceList.get(z).getId().compareTo(cmbo) == 0) {
                        Object[] row = new Object[6];
                        row[0] = announceList.get(z).getAnnouncementID();
                        row[1] = announceList.get(z).getAnnouncementTitle();
                        row[2] = announceList.get(z).getAnnouncementDescription();
                        row[3] = announceList.get(z).getAnnouncementStatus();
                        row[4] = announceList.get(z).getAnnouncementDate();
                        row[5] = announceList.get(z).getId();
                        model.addRow(row);
                    }
                }
                break;
            case "Tutor":
                while (model.getRowCount() > 0) {
                    model.removeRow(0);
                }
                for (int z = 0; z < sizee; z++) {
                    if (announceList.get(z).getId().compareTo(cmbo) == 0) {
                        Object[] row = new Object[6];
                        row[0] = announceList.get(z).getAnnouncementID();
                        row[1] = announceList.get(z).getAnnouncementTitle();
                        row[2] = announceList.get(z).getAnnouncementDescription();
                        row[3] = announceList.get(z).getAnnouncementStatus();
                        row[4] = announceList.get(z).getAnnouncementDate();
                        row[5] = announceList.get(z).getId();
                        model.addRow(row);
                    }
                }
                break;
            case "Student":
                while (model.getRowCount() > 0) {
                    model.removeRow(0);
                }
                for (int z = 0; z < sizee; z++) {
                    if (announceList.get(z).getId().compareTo(cmbo) == 0) {
                        Object[] row = new Object[6];
                        row[0] = announceList.get(z).getAnnouncementID();
                        row[1] = announceList.get(z).getAnnouncementTitle();
                        row[2] = announceList.get(z).getAnnouncementDescription();
                        row[3] = announceList.get(z).getAnnouncementStatus();
                        row[4] = announceList.get(z).getAnnouncementDate();
                        row[5] = announceList.get(z).getId();
                        model.addRow(row);
                    }
                }
                break;
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame_Announcement_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame_Announcement_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame_Announcement_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame_Announcement_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame_Announcement_View().setVisible(true);
            }
        });
    }

    public void showTable() {
        String cmbo = combobox.getSelectedItem().toString();
        Database database = new Database();
        ArrayList<Announcement> announceList = database.getAnnouncement();
        DefaultTableModel model = (DefaultTableModel) announcement.getModel();
        int sizee = announceList.size();
        for (int z = 0; z < sizee; z++) {
            Object[] row = new Object[6];
            row[0] = announceList.get(z).getAnnouncementID();
            row[1] = announceList.get(z).getAnnouncementTitle();
            row[2] = announceList.get(z).getAnnouncementDescription();
            row[3] = announceList.get(z).getAnnouncementStatus();
            row[4] = announceList.get(z).getAnnouncementDate();
            row[5] = announceList.get(z).getId();
            model.addRow(row);
        }
    }

    public final void list() {
        combobox.addItem("All");
        combobox.addItem("Admin");
        combobox.addItem("Tutor");
        combobox.addItem("Student");
        combobox.setSelectedItem("All");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable announcement;
    private javax.swing.JComboBox<String> combobox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
